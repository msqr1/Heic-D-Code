cmake_minimum_required(VERSION 3.25)
project(Heif-D-Code CXX)

set(CMAKE_CONFIGURATION_TYPES "Debug;Release")
if(CMAKE_BINARY_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)
  message(FATAL_ERROR "In-source build is unsupported")
endif()
  
set(commonCompileFlags "-fno-exceptions;-Wno-everything;-sSUPPORT_LONGJMP=0;--no-entry")
set(commonLinkFlags "-sMALLOC=emmalloc;-sSUPPORT_LONGJMP=0;-sDEFAULT_TO_CXX=0;-sENVIRONMENT=web,worker;-sEXPORTED_FUNCTIONS=_malloc;-sEVAL_CTORS=2;-sEXPORT_ES6;-sMODULARIZE;-sWASMFS;-sFILESYSTEM=0;-sEXPORTED_RUNTIME_METHODS=HEAPU8;-sALLOW_MEMORY_GROWTH;-lembind")
set(debugCompileFlags "${commonCompileFlags};-fsanitize=address;-fsanitize=undefined;-O0")
set(releaseCompileFlags "${commonCompileFlags};-Oz;-flto;")
set(debugLinkFlags "${debugCompileFlags};${commonLinkFlags};-sASSERTIONS=2;-sSTACK_OVERFLOW_CHECK=2")
set(releaseLinkFlags "${releaseCompileFlags};${commonLinkFlags}")

get_cmake_property(multiConfigGenerator GENERATOR_IS_MULTI_CONFIG)
if(multiConfigGenerator)
  message("Multi-config generator detected")
  add_compile_options("$<$<CONFIG:Debug>:${debugCompileFlags}>"
    "$<$<CONFIG:Release>:${releaseCompileFlags}>")
  add_link_options("$<$<CONFIG:Debug>:${debugLinkFlags}>"
    "$<$<CONFIG:Release>:${releaseLinkFlags}>")
else()
  message("Single-config generator detected")
  if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Debug)
  endif()
  if(CMAKE_BUILD_TYPE STREQUAL Debug)
    add_compile_options(${debugCompileFlags})
    add_link_options(${debugLinkFlags})
  elseif(CMAKE_BUILD_TYPE STREQUAL Release)
    add_compile_options(${releaseCompileFlags})
    add_link_options(${releaseLinkFlags})
  else()
    message(FATAL_ERROR "Unknown build type, only Debug/Release are allowed")
  endif()
endif()
set(BUILD_SHARED_LIBS OFF)
set(CMAKE_POLICY_DEFAULT_CMP0077 NEW)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
add_subdirectory(src)
